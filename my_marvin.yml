jenkins:
  systemMessage: "Welcome to the Chocolatine-Powered Marvin Jenkins Instance."
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: chocolateen
          name: "Hugo"
          password: "${USER_CHOCOLATEEN_PASSWORD}"
        - id: vaugie_g
          name: "Garance"
          password: "${USER_VAUGIE_G_PASSWORD}"
        - id: i_dont_know
          name: "Jeremy"
          password: "${USER_I_DONT_KNOW_PASSWORD}"
        - id: nasso
          name: "Nassim"
          password: "${USER_NASSO_PASSWORD}"
  authorizationStrategy:
    roleBased:
      roles:
        global:
          - name: admin
            description: "Marvin master"
            entries:
              - user: chocolateen
            permissions:
              - "Overall/Administer"
          - name: ape
            description: "Pedagogical team member"
            permissions:
              - "Overall/Read"
              - "Job/Build"
              - "Job/Read"
              - "Job/Workspace"
          - name: gorilla
            description: "Group Obsessively Researching Innovation Linked to Learning and Accomplishment"
            permissions:
              - "Overall/Read"
              - "Job/Build"
              - "Job/Configure"
              - "Job/Create"
              - "Job/Delete"
              - "Job/Move"
              - "Job/Read"
              - "Job/Workspace"
          - name: assist
            description: "Assistant"
            permissions:
              - "Overall/Read"
              - "Job/Read"
              - "Job/Workspace"
jobs:
  - script: >
      folder('Tools') {
          description('Folder for miscellaneous tools.')
      }
  - script: >
      job('Tools/clone-repository') {
          parameters {
              stringParam('GIT_REPOSITORY_URL', '', 'Git URL of the repository to clone')
          }
          wrappers {
              preBuildCleanup()
          }
          steps {
              shell('rm -rf * && git clone ${GIT_REPOSITORY_URL}')
          }
          triggers {
              // Aucun déclenchement automatique : manuel uniquement
          }
      }
  - script: >
      job('Tools/SEED') {
          parameters {
              stringParam('GITHUB_NAME', '', 'GitHub repository owner/repo_name')
              stringParam('DISPLAY_NAME', '', 'Display name for the job')
          }
          wrappers {
              preBuildCleanup()
          }
          steps {
              shell('cp /usr/share/jenkins/ref/job_dsl.groovy .')
              // L'étape DSL permet de charger le script externe job_dsl.groovy
              dsl {
                  external('job_dsl.groovy')
              }
          }
          triggers {
              // Vous pouvez ajouter un déclencheur manuel ou SCM polling si nécessaire
          }
      }
